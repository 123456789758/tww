//
// Generated by dtk
// Translation Unit: d_tree.cpp
//

#include "d/d_tree.h"
#include "dolphin/types.h"

#include "weak_data_2100_2080.h" // IWYU pragma: keep

#define CONST_U32(v) ((u8)((v) >> 16)), ((u8)((v) >> 8)), ((u8)((v) >> 0))
#define IMAGE_ADDR(addr) CONST_U32((u32)(addr) >> 5)

u8 l_Txa_swood_aTEX[] ALIGN_DECL(32) = {
    0x75, 0xEC, 0x76, 0x0D, 0xFF, 0xFF, 0x58, 0x5A, 0x75, 0xCC, 0x76, 0x0D, 0xFF, 0xFF, 0xBF, 0x5A,
    0x76, 0x2D, 0x75, 0xEC, 0xA2, 0x09, 0x0F, 0x56, 0x76, 0x0D, 0x75, 0xAC, 0x09, 0x82, 0xB8, 0x28,
    0x00, 0x00, 0x76, 0x0D, 0xFF, 0xFF, 0xFF, 0x7F, 0x75, 0xCC, 0x75, 0xCC, 0xFF, 0xFF, 0xFF, 0xFF,
    0x76, 0x0D, 0x75, 0xAC, 0x8F, 0xC0, 0x00, 0x0E, 0x75, 0xCC, 0x76, 0x0C, 0xFF, 0x5F, 0x54, 0x66,
    0x75, 0xCC, 0x75, 0xCC, 0xFF, 0xFF, 0xFF, 0xFF, 0x76, 0x0C, 0x76, 0x0C, 0xFF, 0xFF, 0xFF, 0xFF,
    0x75, 0xCC, 0x75, 0xEC, 0xFF, 0xFF, 0xFF, 0x1F, 0x76, 0x0C, 0x76, 0x0C, 0xFF, 0xFF, 0xFF, 0xFF,
    0x75, 0xEC, 0x75, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0x76, 0x0C, 0x76, 0x0C, 0xFF, 0xFF, 0xFF, 0xFF,
    0x75, 0xAC, 0x75, 0xAC, 0xFF, 0xFF, 0xFF, 0xFF, 0x76, 0x2D, 0x76, 0x2D, 0xFF, 0xFF, 0xFF, 0xFF,
    0x76, 0x0C, 0x76, 0x0C, 0xFF, 0xFF, 0xFF, 0xFF, 0x75, 0xAC, 0x75, 0xAC, 0xFF, 0xFF, 0xFF, 0xFF,
    0x76, 0x0D, 0x76, 0x0D, 0xFF, 0xFF, 0xFF, 0xFF, 0x75, 0xCC, 0x75, 0xCC, 0xFF, 0xFF, 0xFF, 0xFF,
    0x75, 0xEC, 0x75, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0x76, 0x0D, 0x76, 0x0D, 0xFF, 0xFF, 0xFF, 0xFF,
    0x75, 0xEC, 0x75, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0x75, 0xEC, 0x75, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF,
    0x76, 0x0C, 0x76, 0x0C, 0xFF, 0xFF, 0xFF, 0xFF, 0x76, 0x0C, 0x76, 0x0C, 0xFF, 0xFF, 0xFF, 0xFF,
    0x6D, 0x6B, 0x75, 0xEC, 0xFF, 0xFF, 0xFC, 0xD4, 0x65, 0x4B, 0x76, 0x0D, 0xFD, 0xD5, 0x95, 0x94,
    0x75, 0xEC, 0x76, 0x0D, 0xFF, 0xFF, 0xFF, 0xF9, 0x75, 0xCC, 0x76, 0x0C, 0xFF, 0xFF, 0xD5, 0x56,
    0x75, 0xEC, 0x23, 0xE7, 0x00, 0x00, 0x0B, 0xF5, 0x76, 0x0C, 0x23, 0xA7, 0x00, 0x00, 0xFD, 0x55,
    0x44, 0xC9, 0x1B, 0x46, 0xF8, 0xFE, 0xAF, 0xF5, 0x65, 0x8B, 0x23, 0x87, 0xA0, 0xDF, 0x55, 0x55,
    0xB6, 0x10, 0x24, 0x07, 0x55, 0x55, 0x55, 0x00, 0x64, 0xAB, 0x23, 0xC7, 0x7F, 0x75, 0xF5, 0x15,
    0x75, 0xEC, 0x24, 0x07, 0x00, 0xE0, 0x57, 0x55, 0x75, 0xEC, 0x23, 0xA7, 0x00, 0x00, 0x80, 0x58,
    0x2C, 0x28, 0x1B, 0x46, 0x3E, 0x37, 0xE3, 0x63, 0x24, 0x08, 0x1B, 0x26, 0x08, 0x00, 0x60, 0x42,
    0x6D, 0x8C, 0x76, 0x0D, 0x57, 0x68, 0x56, 0x55, 0x75, 0xCC, 0x75, 0xEC, 0xFF, 0xFF, 0x7F, 0x5F,
    0x75, 0xEC, 0x23, 0xE7, 0x80, 0x70, 0x5C, 0x55, 0x6D, 0x8C, 0x76, 0x0D, 0x57, 0x55, 0x55, 0x12,
    0x75, 0xCC, 0x75, 0xCC, 0xFF, 0xFF, 0xFF, 0xFF, 0x76, 0x0C, 0x76, 0x0C, 0xFF, 0xFF, 0xFF, 0xFF,
    0x75, 0xEC, 0x76, 0x0D, 0xFF, 0xFF, 0x7F, 0x6F, 0x76, 0x0D, 0x76, 0x0D, 0xFF, 0xFF, 0xFF, 0xFF,
    0x75, 0xAC, 0x75, 0xAC, 0xFF, 0xFF, 0xFF, 0xFF, 0x76, 0x2D, 0x76, 0x2D, 0xFF, 0xFF, 0xFF, 0xFF,
    0x75, 0xEC, 0x75, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0x75, 0xEC, 0x75, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF,
    0x76, 0x0C, 0x76, 0x0C, 0xFF, 0xFF, 0xFF, 0xFF, 0x75, 0xCC, 0x76, 0x0D, 0xFF, 0xFD, 0xF4, 0xC6,
    0x75, 0xCC, 0x76, 0x0D, 0xFF, 0xFD, 0xF9, 0xF5, 0x76, 0x0D, 0x23, 0xE7, 0x00, 0x02, 0x09, 0x25,
    0x75, 0xEC, 0x24, 0x07, 0x00, 0x00, 0x03, 0x0D, 0x6D, 0xAC, 0x23, 0xC7, 0x09, 0x95, 0x55, 0x75,
    0x65, 0xAB, 0x1B, 0x06, 0x3F, 0xFF, 0xD7, 0xD7, 0x2C, 0x28, 0x23, 0x87, 0x60, 0xF0, 0xAB, 0x0B,
    0x2C, 0x48, 0x1B, 0x87, 0x60, 0xAA, 0x8F, 0x8B, 0x2C, 0x28, 0x23, 0xA7, 0x0A, 0x80, 0xD2, 0x72,
    0x2C, 0x08, 0x23, 0x87, 0x70, 0x9A, 0x05, 0xAB, 0x2C, 0x28, 0x23, 0xA7, 0x82, 0x8E, 0x8E, 0x40,
    0xEF, 0x56, 0xBD, 0xEF, 0x97, 0x0D, 0x03, 0x00, 0xC6, 0x10, 0x23, 0xC7, 0x35, 0x05, 0x09, 0x02,
    0xEF, 0x56, 0xD6, 0x72, 0x00, 0x00, 0x00, 0x60, 0xEF, 0x56, 0xC6, 0x30, 0x25, 0x09, 0x00, 0x00,
    0x2C, 0x08, 0x1B, 0x67, 0x00, 0x08, 0x05, 0xC9, 0x2C, 0x48, 0x1B, 0x06, 0x82, 0x0A, 0x0D, 0x89,
    0xD6, 0x92, 0x24, 0x07, 0xD5, 0x95, 0x25, 0x0D, 0x2C, 0x28, 0x23, 0xA7, 0x2A, 0x36, 0x03, 0x7D,
    0x2C, 0x28, 0x1B, 0x67, 0xE0, 0x02, 0x43, 0x40, 0x75, 0xCC, 0x23, 0xE7, 0x60, 0x58, 0x56, 0x55,
    0x2C, 0x48, 0x23, 0xA7, 0xA0, 0xA0, 0x60, 0xEA, 0x2C, 0x28, 0x23, 0x87, 0x80, 0x09, 0x9F, 0x5F,
    0x75, 0xCC, 0x7E, 0x2D, 0x8B, 0x42, 0x6A, 0x22, 0x00, 0x00, 0x76, 0x0C, 0xFF, 0xFF, 0xFF, 0x7F,
    0x75, 0xCC, 0x23, 0xA7, 0xC0, 0x70, 0x58, 0x5C, 0x75, 0xAC, 0x76, 0x0C, 0x7F, 0x5F, 0x4F, 0x4B,
    0x75, 0xEC, 0x75, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x76, 0x0C, 0xFF, 0xFF, 0xFF, 0xFD,
    0x75, 0xCC, 0x75, 0xCC, 0xFF, 0xFF, 0xFF, 0xFF, 0x75, 0xEC, 0x76, 0x0D, 0xFD, 0xF6, 0xF4, 0xCA,
    0x2C, 0x28, 0x76, 0x0C, 0xD5, 0x55, 0x56, 0x54, 0x75, 0xAC, 0x23, 0xE7, 0x35, 0x95, 0x55, 0x55,
    0x7E, 0x0D, 0x23, 0xA7, 0x0D, 0x25, 0x15, 0x95, 0x2C, 0x28, 0x1B, 0x46, 0xA0, 0x82, 0x01, 0xA2,
    0x2C, 0x28, 0x1B, 0x26, 0x00, 0x00, 0xBC, 0xDC, 0x2C, 0x28, 0x23, 0x87, 0x20, 0x9E, 0x97, 0x35,
    0x2C, 0x28, 0x1B, 0x46, 0xAA, 0xED, 0x7A, 0xA0, 0x2C, 0x28, 0x1B, 0x46, 0x35, 0xA7, 0x0A, 0x00,
    0x2C, 0x08, 0x23, 0x87, 0x82, 0x07, 0x85, 0x40, 0x2C, 0x08, 0x1B, 0x46, 0x62, 0x0B, 0x0E, 0x3E,
    0x2C, 0x08, 0x23, 0x87, 0xC0, 0x0E, 0xCF, 0x85, 0x2C, 0x28, 0x23, 0x87, 0x20, 0x0A, 0xF5, 0xB5,
    0xE6, 0xF4, 0xCD, 0xEF, 0x58, 0x57, 0x55, 0x55, 0xEF, 0x56, 0xCD, 0xEF, 0x00, 0x80, 0x60, 0x70,
    0xEF, 0x56, 0xCD, 0xEF, 0xB5, 0x0D, 0x09, 0x01, 0xEF, 0x56, 0xCD, 0xEF, 0x58, 0x5C, 0x5C, 0x54,
    0xEF, 0x56, 0x4C, 0x49, 0x09, 0x09, 0x0B, 0x0B, 0x2C, 0x08, 0x12, 0xE6, 0x7E, 0x70, 0xE0, 0x08,
    0xE7, 0x36, 0xAD, 0xCE, 0x0D, 0x0D, 0x0F, 0x0F, 0x9D, 0xAE, 0x23, 0xC7, 0x55, 0xD5, 0x95, 0x15,
    0x2C, 0x28, 0x23, 0x87, 0x37, 0x37, 0x00, 0x28, 0x2C, 0x08, 0x1B, 0x06, 0x82, 0x00, 0x28, 0x98,
    0x2C, 0x28, 0x23, 0xA7, 0x14, 0x38, 0x81, 0x01, 0x2C, 0x48, 0x23, 0x87, 0xD8, 0x8A, 0xE5, 0xAE,
    0x2C, 0x28, 0x23, 0x87, 0x40, 0x03, 0x20, 0x16, 0x34, 0x49, 0x75, 0xCC, 0x57, 0x97, 0x15, 0x25,
    0x2C, 0x28, 0x23, 0xA7, 0x36, 0x0E, 0x0B, 0x36, 0x75, 0xEC, 0x24, 0x07, 0x70, 0x58, 0x5C, 0x54,
    0x76, 0x0D, 0x76, 0x0D, 0xFF, 0xFF, 0xFF, 0xFF, 0x2C, 0x28, 0x75, 0xCC, 0xD5, 0xD6, 0x54, 0x58,
    0x75, 0x8C, 0x75, 0xEC, 0xFF, 0x7D, 0x7D, 0x7C, 0x75, 0xCC, 0x23, 0xE7, 0x0D, 0x25, 0x35, 0x15,
    0x2C, 0x48, 0x23, 0x87, 0xB8, 0xC0, 0x09, 0xA9, 0x2C, 0x28, 0x23, 0x87, 0x98, 0x2A, 0xCA, 0x67,
    0x2C, 0x08, 0x1B, 0x67, 0x62, 0xEA, 0x0D, 0x82, 0x2C, 0x28, 0x23, 0xC7, 0x45, 0x0D, 0xCA, 0x82,
    0x2C, 0x28, 0x23, 0x87, 0x26, 0xB6, 0xB8, 0x00, 0x2C, 0x08, 0x1B, 0x06, 0x20, 0x38, 0x2B, 0x09,
    0x2C, 0x28, 0x23, 0xC7, 0x16, 0xF8, 0x09, 0x8D, 0x2C, 0x48, 0x23, 0xA7, 0xE9, 0x50, 0xAE, 0x02,
    0x2C, 0x48, 0x23, 0x87, 0x27, 0xAA, 0x60, 0x72, 0x2C, 0x28, 0x23, 0x87, 0x2F, 0x5E, 0xD8, 0x82,
    0x34, 0x28, 0x23, 0xA7, 0x5A, 0x3C, 0xB7, 0x00, 0x34, 0x48, 0x23, 0x87, 0x79, 0xDE, 0xAB, 0x0F,
    0xEF, 0x56, 0xCD, 0xEF, 0x01, 0x09, 0x0D, 0xB5, 0xEF, 0x56, 0xCD, 0xEF, 0x54, 0x5C, 0x5C, 0x58,
    0xE6, 0xF4, 0xCD, 0xEF, 0x55, 0x55, 0x57, 0x58, 0xEF, 0x56, 0xCD, 0xEF, 0x70, 0x60, 0x80, 0x00,
    0xE7, 0x36, 0xBE, 0x10, 0x05, 0x05, 0x05, 0x05, 0xBE, 0x10, 0x23, 0xE7, 0x35, 0x25, 0x05, 0x0D,
    0xE7, 0x36, 0xB5, 0xAC, 0x0F, 0x0D, 0x0D, 0x05, 0xBE, 0x10, 0x3C, 0x08, 0x09, 0x01, 0x03, 0x02,
    0x2C, 0x28, 0x23, 0x87, 0x8A, 0xC9, 0x0A, 0x80, 0x24, 0x08, 0x1B, 0x26, 0x00, 0x0A, 0x2A, 0x18,
    0x2C, 0x28, 0x23, 0x87, 0xE8, 0xAE, 0xFA, 0x52, 0x2C, 0x28, 0x23, 0xA7, 0x18, 0x00, 0xEA, 0x70,
    0x2C, 0x48, 0x23, 0xC7, 0x9E, 0x96, 0xA8, 0x80, 0x4C, 0xEA, 0x23, 0xA7, 0x5C, 0xD7, 0x55, 0x55,
    0x2C, 0x28, 0x23, 0xA7, 0x80, 0x0A, 0x05, 0x05, 0x2C, 0x28, 0x23, 0xC7, 0x3C, 0xD8, 0xB0, 0x07,
    0x76, 0x0D, 0x44, 0xA9, 0x08, 0x00, 0xC3, 0x41, 0x4C, 0xEA, 0x1B, 0x46, 0x3B, 0xBB, 0x7F, 0x7B,
    0x6D, 0xCC, 0x23, 0xE7, 0x41, 0x69, 0x69, 0x7D, 0x2C, 0x48, 0x23, 0x87, 0x62, 0xAF, 0x35, 0x25,
    0x2C, 0x08, 0x1B, 0x26, 0x60, 0x82, 0x00, 0x00, 0x2C, 0x28, 0x23, 0xA7, 0x02, 0xE7, 0x5C, 0xE0,
    0x2C, 0x08, 0x23, 0xA7, 0xAF, 0x0A, 0x08, 0xE8, 0x2C, 0x28, 0x23, 0x87, 0x80, 0x89, 0x2E, 0x22,
    0xB5, 0xEF, 0x23, 0xE7, 0x50, 0x50, 0x50, 0x50, 0xD6, 0x92, 0xBD, 0xCE, 0x57, 0x77, 0xD7, 0x80,
    0xBD, 0xEE, 0x24, 0x08, 0x50, 0x50, 0x50, 0x50, 0xCE, 0x72, 0xBD, 0xEF, 0xE0, 0x7D, 0xE5, 0xF7,
    0xDE, 0xD4, 0xBD, 0xEF, 0x55, 0xF5, 0x55, 0x00, 0xCE, 0x71, 0xAD, 0xAD, 0xD7, 0xAF, 0xFF, 0x2A,
    0xCE, 0x92, 0xBD, 0xEF, 0x80, 0x57, 0x75, 0xDD, 0xC6, 0x31, 0xBD, 0xCE, 0x02, 0x9B, 0xA3, 0xC3,
    0xEF, 0x56, 0xD6, 0x72, 0x60, 0x00, 0x00, 0x00, 0xEF, 0x56, 0xC6, 0x30, 0x00, 0x00, 0x09, 0x35,
    0xEF, 0x56, 0xBE, 0x10, 0x00, 0x03, 0x2D, 0x95, 0xD6, 0x92, 0xBD, 0xEF, 0x17, 0x75, 0x7F, 0xFF,
    0xEF, 0x56, 0xBD, 0xEF, 0x35, 0xD5, 0x55, 0x55, 0xBE, 0x10, 0xB5, 0xCD, 0x00, 0x00, 0x80, 0x70,
    0xBE, 0x30, 0xBD, 0xCE, 0xA2, 0x0B, 0x02, 0xA0, 0xC6, 0x30, 0xBD, 0xCE, 0xB8, 0x0A, 0xEA, 0x0A,
    0xC6, 0x0F, 0x23, 0xE7, 0x55, 0x95, 0x35, 0x05, 0x2C, 0x08, 0x1B, 0x47, 0x60, 0x8C, 0x28, 0x80,
    0xBE, 0x10, 0x2B, 0xA7, 0x09, 0x00, 0x00, 0x00, 0xB5, 0xEF, 0x23, 0xE7, 0x55, 0xD5, 0x35, 0x05,
    0x2C, 0x08, 0x1A, 0xE6, 0x00, 0xA0, 0x98, 0x38, 0x2C, 0x08, 0x1B, 0x67, 0x3E, 0x2A, 0xAE, 0x60,
    0x2C, 0x28, 0x23, 0xA7, 0x28, 0xA0, 0xAC, 0x24, 0x2C, 0x48, 0x23, 0xA7, 0x58, 0xF0, 0x28, 0x36,
    0x2C, 0x28, 0x23, 0x87, 0x70, 0x62, 0x82, 0x00, 0x2C, 0x28, 0x23, 0xA7, 0x0D, 0xCA, 0xF0, 0x00,
    0x2C, 0x28, 0x1B, 0x47, 0x00, 0x00, 0x30, 0x94, 0x2C, 0x08, 0x23, 0x67, 0x02, 0xEA, 0x98, 0x3A,
    0x2C, 0x28, 0x1B, 0x06, 0xA0, 0x0A, 0x05, 0x09, 0x2C, 0x28, 0x1B, 0x67, 0xD3, 0x52, 0xC0, 0xE8,
    0x2C, 0x28, 0x23, 0xA7, 0xF6, 0x96, 0x02, 0x82, 0x2C, 0x28, 0x23, 0xA7, 0xBC, 0x08, 0x70, 0x60,
    0xB5, 0xF0, 0x2B, 0xE8, 0x50, 0x50, 0x50, 0x50, 0xC6, 0x31, 0xBD, 0xCE, 0xF4, 0xF8, 0x38, 0x34,
    0xB6, 0x10, 0x24, 0x07, 0x50, 0x50, 0x50, 0x50, 0xD6, 0x92, 0xBD, 0xEE, 0xC0, 0xC0, 0x57, 0x5F,
    0xDE, 0xF4, 0xBE, 0x0F, 0xD5, 0x5F, 0x70, 0x55, 0xDE, 0xF5, 0xBE, 0x10, 0x55, 0xF5, 0x0D, 0x55,
    0xD6, 0xB3, 0xBD, 0xEF, 0x2B, 0x0B, 0x5D, 0xD5, 0xBE, 0x10, 0xBD, 0xCE, 0xC2, 0x17, 0x00, 0x40,
    0xC6, 0x31, 0xBD, 0xCD, 0x28, 0x36, 0x2A, 0x28, 0xBE, 0x10, 0xBD, 0xCE, 0x3C, 0x2C, 0x00, 0x00,
    0xBE, 0x10, 0xB5, 0x8C, 0x00, 0xA2, 0xA2, 0x24, 0xC6, 0x31, 0xBD, 0xCE, 0x2A, 0x42, 0xEA, 0x36,
    0xBE, 0x30, 0xBD, 0xCD, 0x28, 0x36, 0x2A, 0x28, 0xBE, 0x10, 0xBD, 0xCE, 0x3C, 0x2C, 0x00, 0x00,
    0xBE, 0x10, 0xB5, 0x8C, 0x00, 0xA2, 0xA2, 0x24, 0xC6, 0x31, 0xBD, 0xCE, 0x2A, 0x42, 0xEC, 0x36,
    0xBE, 0x10, 0xBD, 0xCE, 0x0C, 0x00, 0xE0, 0x00, 0xB6, 0x10, 0x23, 0xC7, 0x05, 0x05, 0x05, 0x05,
    0xBE, 0x30, 0xBD, 0xCE, 0x20, 0x22, 0x01, 0x0A, 0xB5, 0xF0, 0x34, 0x28, 0x05, 0x05, 0x05, 0x05,
    0x2C, 0x28, 0x23, 0x87, 0xD8, 0x70, 0x60, 0xBA, 0x2C, 0x08, 0x1B, 0x26, 0x28, 0xA0, 0x80, 0x01,
    0x2C, 0x28, 0x23, 0x67, 0x27, 0x2F, 0x02, 0x02, 0x23, 0xE7, 0x1B, 0x06, 0x03, 0xA0, 0x70, 0x80,
    0x2C, 0x28, 0x1B, 0x26, 0x3E, 0x0A, 0x0A, 0x60, 0x2C, 0x28, 0x23, 0xA7, 0x69, 0xE0, 0x02, 0xAA,
    0x2C, 0x28, 0x1B, 0x06, 0x60, 0x82, 0x0A, 0xA2, 0x2C, 0x28, 0x23, 0xC7, 0x94, 0x0E, 0x00, 0x80,
    0x2C, 0x08, 0x23, 0x87, 0x80, 0x20, 0xAA, 0x81, 0x2C, 0x28, 0x1B, 0x46, 0x0B, 0x25, 0x8A, 0xC0,
    0x2C, 0x28, 0x1B, 0x46, 0x02, 0x00, 0xD8, 0x50, 0x2C, 0x48, 0x1B, 0x06, 0x8B, 0x2D, 0xAF, 0xAE,
    0xB6, 0x10, 0x24, 0x08, 0x50, 0x50, 0x50, 0x50, 0xD6, 0xB2, 0xBD, 0xEF, 0x75, 0x7D, 0x57, 0xC0,
    0xB5, 0xEF, 0x2B, 0xC8, 0x50, 0x50, 0x50, 0x50, 0xCE, 0x72, 0xB5, 0xCE, 0x00, 0x96, 0xDF, 0x7B,
    0xDE, 0xD3, 0xBE, 0x0F, 0x55, 0x55, 0x55, 0x00, 0xD6, 0x92, 0xBE, 0x10, 0x5D, 0x5D, 0x55, 0x2D,
    0xCE, 0x92, 0xBD, 0xEF, 0x00, 0xDD, 0x7F, 0x7F, 0xC6, 0x51, 0xBD, 0xCE, 0x0A, 0xBE, 0x96, 0xAB,
    0xC6, 0x30, 0xB5, 0xAD, 0x26, 0xE9, 0xBA, 0xA0, 0xBE, 0x10, 0xB5, 0xCD, 0x00, 0x00, 0x80, 0x70,
    0xBE, 0x30, 0xBD, 0xCE, 0xA2, 0x0B, 0x02, 0xA0, 0xC6, 0x30, 0xBD, 0xCE, 0xB8, 0x0B, 0xEA, 0x0A,
    0xC6, 0x30, 0xB5, 0xAD, 0x26, 0xE9, 0xBA, 0xA0, 0xBE, 0x10, 0xB5, 0xCD, 0x00, 0x00, 0x80, 0x70,
    0xBE, 0x30, 0xBD, 0xCE, 0xA2, 0x0B, 0x02, 0xA0, 0xC6, 0x30, 0xBD, 0xCE, 0xB8, 0x0A, 0xEA, 0x0A,
    0xBE, 0x30, 0xBD, 0xCE, 0x60, 0xDC, 0x2C, 0xBA, 0xB5, 0xF0, 0x2C, 0x08, 0x05, 0x05, 0x05, 0x05,
    0xC6, 0x31, 0xBD, 0xCE, 0xAD, 0x3A, 0x88, 0x8F, 0xB5, 0xEF, 0x23, 0x67, 0x0D, 0x05, 0x05, 0x05,
    0x2C, 0x28, 0x12, 0x85, 0xA0, 0xA8, 0x36, 0x2E, 0x2C, 0x28, 0x23, 0xA7, 0x23, 0x12, 0xB3, 0x01,
    0x2C, 0x48, 0x23, 0xA7, 0xA8, 0x40, 0x62, 0xA2, 0x2C, 0x08, 0x23, 0x87, 0x0F, 0xFE, 0xAE, 0x0D,
    0x2C, 0x28, 0x1B, 0x67, 0x60, 0x82, 0x62, 0x60, 0x2C, 0x28, 0x1B, 0x67, 0x02, 0xEA, 0x5C, 0xB8,
    0x2C, 0x28, 0x23, 0xA7, 0x08, 0xA7, 0x7A, 0x60, 0x2C, 0x28, 0x23, 0xA7, 0x22, 0xB2, 0x0D, 0x0D,
    0x2C, 0x28, 0x23, 0xC7, 0x60, 0xCC, 0x38, 0x58, 0x2C, 0x28, 0x1B, 0x67, 0xBE, 0x2B, 0x01, 0xA2,
    0x2C, 0x28, 0x1A, 0xE6, 0x70, 0xE0, 0x08, 0x82, 0x2C, 0x48, 0x23, 0x67, 0xA0, 0x2F, 0x97, 0xFE,
    0xBD, 0xEE, 0x2B, 0xE8, 0x50, 0x50, 0x50, 0x50, 0xBE, 0x10, 0xB5, 0xAD, 0xC0, 0x10, 0x08, 0x07,
    0xBE, 0x0F, 0x2B, 0xC8, 0x50, 0x50, 0x50, 0x50, 0xD6, 0x92, 0xBD, 0xEF, 0xAA, 0xA0, 0xD5, 0xFF,
    0xDE, 0xF4, 0xB5, 0xAD, 0xF7, 0xFF, 0xE0, 0xFF, 0xDE, 0xD4, 0xBD, 0xEF, 0xD5, 0xE5, 0x0B, 0x5F,
    0xD6, 0x93, 0xBD, 0xEF, 0x0B, 0x03, 0x57, 0xF7, 0xBE, 0x10, 0xBD, 0xCE, 0xD3, 0x03, 0x00, 0xE0,
};

Vec l_pos[] = {
    {-10.0f, 105.608147f, 5.0f},
    {10.0f, 105.608147f, 5.0f},
    {0.0f, 115.841797f, 0.0f},
    {-19.090694f, 190.686432f, 37.321354f},
    {0.0f, 105.608147f, -10.0f},
    {41.625153f, 211.34726f, -14.772539f},
    {-33.026093f, 215.296951f, -44.96241f},
    {-10.0f, 20.0f, 5.0f},
    {10.0f, 20.0f, 5.0f},
    {0.0f, 20.0f, -10.0f},
    {10.0f, 105.608147f, -5.0f},
    {10.0f, 20.0f, -5.0f},
    {-10.0f, 105.608147f, -5.0f},
    {-10.0f, 20.0f, -5.0f},
    {0.0f, 105.608147f, 10.0f},
    {0.0f, 20.0f, 10.0f},
    {-10.0f, 0.0f, 5.0f},
    {10.0f, 0.0f, 5.0f},
    {0.0f, 0.0f, -10.0f},
    {10.0f, 0.0f, -5.0f},
    {-10.0f, 0.0f, -5.0f},
    {0.0f, 0.0f, 10.0f},
    {2.909025f, 212.994461f, -45.632366f},
    {-10.776078f, 184.271301f, 5.599532f},
    {33.920052f, 212.994461f, 34.134495f},
    {72.31778f, 168.951508f, 19.206579f},
    {86.002876f, 197.674683f, -32.025314f},
    {41.30674f, 168.951508f, -60.560272f},
    {-10.575331f, 211.978516f, -22.376558f},
    {14.409488f, 243.166702f, 23.706152f},
    {58.760258f, 202.669464f, 34.361908f},
    {96.549309f, 224.54863f, -8.227419f},
    {71.564476f, 193.360443f, -54.310123f},
    {27.213718f, 233.857651f, -64.965866f},
    {41.625156f, 211.347275f, -14.772542f},
    {22.596979f, 256.019928f, -40.096336f},
    {14.065658f, 241.755569f, -4.058219f},
    {44.6987f, 256.019958f, 16.753942f},
    {73.287094f, 230.837082f, 5.639604f},
    {81.818398f, 245.101456f, -30.398512f},
    {51.185356f, 230.837082f, -51.210663f},
    {-7.857542f, 194.658112f, -10.762144f},
    {-53.937096f, 156.796143f, -1.809134f},
    {-66.201447f, 183.508667f, 50.850483f},
    {-28.940256f, 145.54512f, 79.264961f},
    {17.139292f, 183.407074f, 70.311951f},
    {29.403631f, 156.69455f, 17.652328f},
    {-19.090696f, 190.686417f, 37.321354f},
    {-33.985317f, 188.75563f, -13.250698f},
    {-70.496834f, 213.49118f, 28.887436f},
    {-54.248596f, 175.144028f, 73.452583f},
    {-4.665742f, 206.592773f, 89.977669f},
    {31.845766f, 181.857224f, 47.839523f},
    {15.597519f, 220.204346f, 3.274376f},
    {-19.090696f, 190.686432f, 37.321358f},
    {-12.561728f, 237.465271f, 9.606261f},
    {-45.613617f, 216.75177f, 16.922333f},
    {-54.143745f, 229.519012f, 53.517914f},
    {-27.798243f, 208.733109f, 74.704277f},
    {5.253643f, 229.446609f, 67.388199f},
    {13.783756f, 216.679367f, 30.792624f},
    {-65.836937f, 200.599899f, -79.042107f},
    {-78.85379f, 178.159485f, -24.599487f},
    {-47.995983f, 222.830963f, 1.654331f},
    {2.405176f, 189.776688f, -0.382604f},
    {15.422019f, 212.217102f, -54.825226f},
    {-15.435799f, 167.545624f, -81.079041f},
    {-33.026093f, 215.296951f, -44.962418f},
    {-81.844887f, 199.673126f, -57.441658f},
    {-73.009483f, 243.963348f, -16.443239f},
    {-21.627028f, 220.240952f, 6.308706f},
    {14.903163f, 244.573044f, -36.047581f},
    {6.067755f, 200.282806f, -77.045998f},
    {-45.314705f, 224.005219f, -99.797928f},
    {-33.026093f, 215.296967f, -44.962421f},
    {-59.207829f, 247.753891f, -80.459984f},
    {-68.884155f, 237.886353f, -43.257812f},
    {-46.492485f, 263.598114f, -22.947197f},
    {-10.970461f, 246.166f, -25.998304f},
    {-1.294143f, 256.033539f, -63.200481f},
    {-23.685818f, 230.321808f, -83.511086f},
};

GXColor l_color[] = {
    {0x80, 0x80, 0x80, 0xFF},
    {0x8D, 0x8D, 0x8D, 0xFF},
    {0x99, 0x99, 0x99, 0xFF},
    {0xFF, 0xFF, 0xFF, 0xFF},
    {0x9C, 0x9C, 0x9C, 0xFF},
    {0x97, 0x97, 0x97, 0xFF},
    {0x8C, 0x8C, 0x8C, 0xFF},
    {0x33, 0x33, 0x33, 0xFF},
    {0x66, 0x66, 0x66, 0xFF},
    {0xBF, 0xBF, 0xBF, 0xFF},
};

cXy l_texCoord[] = {
    {0.862864f, 0.532151f},
    {0.864665f, 1.0f},
    {0.878197f, 1.0f},
    {0.878197f, 0.53125f},
    {0.0f, 0.73413f},
    {0.15625f, 0.625f},
    {0.156459f, 0.375f},
    {0.0f, 0.259522f},
    {-0.15625f, 0.375f},
    {-0.15625f, 0.625f},
    {0.5f, 1.0f},
    {1.0f, 0.0f},
    {0.0f, 0.0f},
    {0.878197f, 0.990122f},
    {0.878197f, 0.871582f},
    {0.878197f, 0.625094f},
};

u8 l_Oba_swood_noneDL[] ALIGN_DECL(32) = {
    0x61, 0x41, 0x00, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00,
};

u8 l_Oba_swood_a_cuttDL[] ALIGN_DECL(32) = {
    0x61, 0x41, 0x00, 0x04, 0xAD, 0x98, 0x00, 0x0E, 0x01, 0x04, 0x03, 0x0F, 0x02, 0x02, 0x0E, 0x01,
    0x03, 0x07, 0x02, 0x02, 0x00, 0x02, 0x03, 0x0D, 0x02, 0x02, 0x0C, 0x06, 0x03, 0x09, 0x02, 0x02,
    0x04, 0x05, 0x03, 0x0B, 0x02, 0x02, 0x0A, 0x01, 0x03, 0x08, 0x02, 0x02, 0x01, 0x04, 0x03, 0x0F,
    0x02, 0x02, 0x98, 0x00, 0x08, 0x0C, 0x06, 0x01, 0x04, 0x05, 0x01, 0x06, 0x00, 0x00, 0x02, 0x03,
    0x01, 0x00, 0x02, 0x01, 0x03, 0x00, 0x00, 0x0E, 0x01, 0x01, 0x01, 0x04, 0x01, 0x98, 0x00, 0x06,
    0x09, 0x07, 0x07, 0x0D, 0x07, 0x08, 0x0B, 0x07, 0x06, 0x07, 0x07, 0x09, 0x08, 0x07, 0x05, 0x0F,
    0x07, 0x04, 0x98, 0x00, 0x06, 0x03, 0x00, 0x00, 0x02, 0x03, 0x01, 0x01, 0x04, 0x01, 0x05, 0x00,
    0x00, 0x0A, 0x01, 0x01, 0x04, 0x05, 0x01, 0x98, 0x00, 0x03, 0x05, 0x00, 0x00, 0x02, 0x03, 0x01,
    0x04, 0x05, 0x01, 0x98, 0x00, 0x03, 0x00, 0x02, 0x01, 0x0C, 0x06, 0x01, 0x06, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

u8 l_Oba_swood_a_cutuDL[] ALIGN_DECL(32) = {
    0x61, 0x41, 0x00, 0x01, 0x0C, 0x98, 0x00, 0x0E, 0x0F, 0x01, 0x03, 0x10, 0x02, 0x02, 0x07, 0x02,
    0x03, 0x14, 0x02, 0x02, 0x0D, 0x06, 0x03, 0x12, 0x02, 0x02, 0x09, 0x05, 0x03, 0x13, 0x02, 0x02,
    0x0B, 0x01, 0x03, 0x11, 0x02, 0x02, 0x08, 0x04, 0x03, 0x15, 0x02, 0x02, 0x0F, 0x01, 0x03, 0x10,
    0x02, 0x02, 0x98, 0x00, 0x06, 0x08, 0x03, 0x05, 0x0F, 0x03, 0x04, 0x0B, 0x03, 0x06, 0x07, 0x03,
    0x09, 0x09, 0x03, 0x07, 0x0D, 0x03, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

u8 l_Oba_swood_a_hapaDL[] ALIGN_DECL(32) = {
    0x98, 0x00, 0x05, 0x19, 0x00, 0x0B, 0x18, 0x00, 0x0C, 0x05, 0x08, 0x0A, 0x17, 0x00, 0x0B, 0x16,
    0x00, 0x0C, 0x98, 0x00, 0x05, 0x16, 0x00, 0x0C, 0x1B, 0x00, 0x0B, 0x05, 0x08, 0x0A, 0x1A, 0x00,
    0x0C, 0x19, 0x00, 0x0B, 0x98, 0x00, 0x05, 0x1F, 0x09, 0x0B, 0x1E, 0x09, 0x0C, 0x22, 0x08, 0x0A,
    0x1D, 0x09, 0x0B, 0x1C, 0x09, 0x0C, 0x98, 0x00, 0x05, 0x1C, 0x09, 0x0C, 0x21, 0x09, 0x0B, 0x22,
    0x08, 0x0A, 0x20, 0x09, 0x0C, 0x1F, 0x09, 0x0B, 0x98, 0x00, 0x05, 0x26, 0x03, 0x0B, 0x25, 0x03,
    0x0C, 0x22, 0x08, 0x0A, 0x24, 0x03, 0x0B, 0x23, 0x03, 0x0C, 0x98, 0x00, 0x05, 0x23, 0x03, 0x0C,
    0x28, 0x03, 0x0B, 0x22, 0x08, 0x0A, 0x27, 0x03, 0x0C, 0x26, 0x03, 0x0B, 0x98, 0x00, 0x05, 0x2C,
    0x00, 0x0B, 0x2B, 0x00, 0x0C, 0x2F, 0x08, 0x0A, 0x2A, 0x00, 0x0B, 0x29, 0x00, 0x0C, 0x98, 0x00,
    0x05, 0x29, 0x00, 0x0C, 0x2E, 0x00, 0x0B, 0x2F, 0x08, 0x0A, 0x2D, 0x00, 0x0C, 0x2C, 0x00, 0x0B,
    0x98, 0x00, 0x05, 0x33, 0x09, 0x0B, 0x32, 0x09, 0x0C, 0x36, 0x08, 0x0A, 0x31, 0x09, 0x0B, 0x30,
    0x09, 0x0C, 0x98, 0x00, 0x05, 0x30, 0x09, 0x0C, 0x35, 0x09, 0x0B, 0x36, 0x08, 0x0A, 0x34, 0x09,
    0x0C, 0x33, 0x09, 0x0B, 0x98, 0x00, 0x05, 0x3A, 0x03, 0x0B, 0x39, 0x03, 0x0C, 0x36, 0x08, 0x0A,
    0x38, 0x03, 0x0B, 0x37, 0x03, 0x0C, 0x98, 0x00, 0x05, 0x37, 0x03, 0x0C, 0x3C, 0x03, 0x0B, 0x36,
    0x08, 0x0A, 0x3B, 0x03, 0x0C, 0x3A, 0x03, 0x0B, 0x98, 0x00, 0x05, 0x40, 0x00, 0x0B, 0x3F, 0x00,
    0x0C, 0x43, 0x08, 0x0A, 0x3E, 0x00, 0x0B, 0x3D, 0x00, 0x0C, 0x98, 0x00, 0x05, 0x3D, 0x00, 0x0C,
    0x42, 0x00, 0x0B, 0x43, 0x08, 0x0A, 0x41, 0x00, 0x0C, 0x40, 0x00, 0x0B, 0x98, 0x00, 0x05, 0x47,
    0x09, 0x0B, 0x46, 0x09, 0x0C, 0x4A, 0x08, 0x0A, 0x45, 0x09, 0x0B, 0x44, 0x09, 0x0C, 0x98, 0x00,
    0x05, 0x44, 0x09, 0x0C, 0x49, 0x09, 0x0B, 0x4A, 0x08, 0x0A, 0x48, 0x09, 0x0C, 0x47, 0x09, 0x0B,
    0x98, 0x00, 0x05, 0x4E, 0x03, 0x0B, 0x4D, 0x03, 0x0C, 0x4A, 0x08, 0x0A, 0x4C, 0x03, 0x0B, 0x4B,
    0x03, 0x0C, 0x98, 0x00, 0x05, 0x4B, 0x03, 0x0C, 0x50, 0x03, 0x0B, 0x4A, 0x08, 0x0A, 0x4F, 0x03,
    0x0C, 0x4E, 0x03, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
};

u8 l_Oba_swood_a_mikiDL[] ALIGN_DECL(32) = {
    0x98, 0x00, 0x0E, 0x0F, 0x01, 0x0F, 0x10, 0x02, 0x0E, 0x07, 0x02, 0x0F, 0x14, 0x02, 0x0E, 0x0D,
    0x06, 0x0F, 0x12, 0x02, 0x0E, 0x09, 0x05, 0x0F, 0x13, 0x02, 0x0E, 0x0B, 0x01, 0x0F, 0x11, 0x02,
    0x0E, 0x08, 0x04, 0x0F, 0x15, 0x02, 0x0E, 0x0F, 0x01, 0x0F, 0x10, 0x02, 0x0E, 0x98, 0x00, 0x0E,
    0x0E, 0x01, 0x03, 0x07, 0x02, 0x0D, 0x00, 0x02, 0x03, 0x0D, 0x02, 0x0D, 0x0C, 0x06, 0x03, 0x09,
    0x02, 0x0D, 0x04, 0x05, 0x03, 0x0B, 0x02, 0x0D, 0x0A, 0x01, 0x03, 0x08, 0x02, 0x0D, 0x01, 0x04,
    0x03, 0x0F, 0x02, 0x0D, 0x0E, 0x01, 0x03, 0x07, 0x02, 0x0D, 0x98, 0x00, 0x08, 0x0C, 0x06, 0x01,
    0x04, 0x05, 0x01, 0x06, 0x00, 0x00, 0x02, 0x03, 0x01, 0x00, 0x02, 0x01, 0x03, 0x00, 0x00, 0x0E,
    0x01, 0x01, 0x01, 0x04, 0x01, 0x98, 0x00, 0x06, 0x03, 0x00, 0x00, 0x02, 0x03, 0x01, 0x01, 0x04,
    0x01, 0x05, 0x00, 0x00, 0x0A, 0x01, 0x01, 0x04, 0x05, 0x01, 0x98, 0x00, 0x03, 0x00, 0x02, 0x01,
    0x0C, 0x06, 0x01, 0x06, 0x00, 0x00, 0x98, 0x00, 0x03, 0x05, 0x00, 0x00, 0x02, 0x03, 0x01, 0x04,
    0x05, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00,
};

u8 l_matDL[] ALIGN_DECL(32) = {
    0x61, 0x80, 0x00, 0x01, 0x3A, 0x61, 0x84, 0x00, 0x00, 0x00, 0x61, 0x88, 0xE0, 0xFC, 0x3F, 0x61,
    0x94,
    IMAGE_ADDR(&l_Txa_swood_aTEX),
    0x61, 0x30, 0x00, 0x00, 0x40, 0x61, 0x31, 0x00, 0x00, 0x40, 0x10, 0x00,
    0x00, 0x10, 0x40, 0xFF, 0xFF, 0x42, 0x80, 0x08, 0x30, 0x3C, 0xF3, 0xCF, 0x00, 0x10, 0x00, 0x00,
    0x10, 0x18, 0x3C, 0xF3, 0xCF, 0x00, 0x10, 0x00, 0x00, 0x10, 0x0E, 0x00, 0x00, 0x05, 0x43, 0x61,
    0x28, 0x3C, 0x00, 0x00, 0x61, 0xC0, 0x08, 0x24, 0xAF, 0x61, 0xC1, 0x08, 0xFF, 0xF0, 0x61, 0x28,
    0x3C, 0x00, 0x00, 0x61, 0xC2, 0x08, 0xF0, 0x8F, 0x61, 0xC3, 0x08, 0xEE, 0x70, 0x61, 0x40, 0x00,
    0x00, 0x17, 0x61, 0x41, 0x00, 0x01, 0x0C, 0x61, 0xF3, 0x64, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10,
    0x3F, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01, 0x61, 0x00,
    0x00, 0x04, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00,
};

u8 l_Txa_kage_32TEX[] ALIGN_DECL(32) = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x01, 0x35, 0x00, 0x00, 0x13, 0x57,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x22, 0x33, 0x01, 0x34, 0x45, 0x66,
    0x24, 0x56, 0x78, 0x88, 0x56, 0x79, 0x9A, 0xAB, 0x78, 0xAB, 0xBC, 0xCC, 0x9A, 0xBC, 0xDD, 0xDE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x22, 0x10, 0x00, 0x66, 0x55, 0x43, 0x20,
    0x88, 0x87, 0x65, 0x43, 0xBA, 0xA9, 0x98, 0x65, 0xCC, 0xCB, 0xBA, 0x87, 0xEE, 0xDD, 0xCB, 0xA9,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x53, 0x20, 0x00, 0x00, 0x75, 0x31, 0x00, 0x00,
    0x00, 0x00, 0x25, 0x79, 0x00, 0x01, 0x46, 0x8A, 0x00, 0x03, 0x57, 0xAB, 0x00, 0x14, 0x69, 0xBC,
    0x00, 0x24, 0x79, 0xBD, 0x00, 0x25, 0x8A, 0xCD, 0x00, 0x36, 0x8A, 0xCD, 0x00, 0x36, 0x8B, 0xCE,
    0xAC, 0xDD, 0xEE, 0xEE, 0xCD, 0xEE, 0xFF, 0xFF, 0xDE, 0xEF, 0xFF, 0xFF, 0xDE, 0xFF, 0xFF, 0xFF,
    0xEF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF,
    0xEE, 0xEE, 0xDD, 0xCA, 0xFF, 0xFF, 0xEE, 0xDC, 0xFF, 0xFF, 0xFE, 0xED, 0xFF, 0xFF, 0xFF, 0xED,
    0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF,
    0x97, 0x53, 0x00, 0x00, 0xA9, 0x64, 0x20, 0x00, 0xBA, 0x85, 0x31, 0x00, 0xCB, 0x96, 0x41, 0x00,
    0xDC, 0xA7, 0x52, 0x00, 0xDC, 0xA8, 0x53, 0x00, 0xEC, 0xB8, 0x63, 0x10, 0xED, 0xB9, 0x63, 0x10,
    0x00, 0x36, 0x8B, 0xCE, 0x00, 0x36, 0x8A, 0xCD, 0x00, 0x25, 0x8A, 0xCD, 0x00, 0x25, 0x79, 0xBD,
    0x00, 0x14, 0x69, 0xBC, 0x00, 0x03, 0x58, 0xAB, 0x00, 0x02, 0x46, 0x8A, 0x00, 0x00, 0x35, 0x79,
    0xEF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF,
    0xDE, 0xFF, 0xFF, 0xFF, 0xDE, 0xEF, 0xFF, 0xFF, 0xCD, 0xEE, 0xFF, 0xFF, 0xAC, 0xDD, 0xEE, 0xEF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE,
    0xFF, 0xFF, 0xFF, 0xEE, 0xFF, 0xFF, 0xFE, 0xED, 0xFF, 0xFF, 0xEE, 0xDC, 0xFF, 0xEE, 0xED, 0xCB,
    0xED, 0xB9, 0x63, 0x10, 0xEC, 0xB8, 0x63, 0x10, 0xDC, 0xA8, 0x63, 0x00, 0xDC, 0xA7, 0x52, 0x00,
    0xCB, 0x97, 0x42, 0x00, 0xCA, 0x86, 0x31, 0x00, 0xA9, 0x74, 0x20, 0x00, 0x97, 0x53, 0x10, 0x00,
    0x00, 0x00, 0x13, 0x57, 0x00, 0x00, 0x01, 0x35, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x9A, 0xBC, 0xDD, 0xEE, 0x79, 0xAB, 0xBC, 0xCD, 0x56, 0x89, 0xAA, 0xBB, 0x34, 0x56, 0x78, 0x89,
    0x02, 0x34, 0x55, 0x66, 0x00, 0x11, 0x23, 0x33, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
    0xEE, 0xDD, 0xCC, 0xA9, 0xDC, 0xCC, 0xBA, 0x97, 0xBB, 0xAA, 0x98, 0x75, 0x98, 0x87, 0x76, 0x43,
    0x66, 0x65, 0x43, 0x21, 0x33, 0x32, 0x11, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x76, 0x31, 0x00, 0x00, 0x64, 0x20, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

u8 g_dTree_shadowPos[][3] = {
    {0xB5, 0x00, 0x4B},
    {0x4B, 0x00, 0x4B},
    {0xB5, 0x00, 0xB5},
    {0x4B, 0x00, 0xB5},
};

u8 g_dTree_shadowTexCoord[][2] = {
    {0x00, 0x00},
    {0x01, 0x00},
    {0x01, 0x01},
    {0x00, 0x01},
};

u8 g_dTree_Oba_kage_32DL[] ALIGN_DECL(32) = {
    0x98, 0x00, 0x04, 0x01, 0x02, 0x00, 0x03, 0x03, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

u8 g_dTree_shadowMatDL[] ALIGN_DECL(32) = {
    0x61, 0x80, 0x00, 0x01, 0x35, 0x61, 0x84, 0x00, 0x00, 0x00, 0x61, 0x88, 0x00, 0x7C, 0x1F, 0x61,
    0x94,
    IMAGE_ADDR(&l_Txa_kage_32TEX),
    0x61, 0x30, 0x00, 0x00, 0x20, 0x61, 0x31, 0x00, 0x00, 0x20, 0x10, 0x00,
    0x00, 0x10, 0x40, 0xFF, 0xFF, 0x42, 0x80, 0x08, 0x30, 0x3C, 0xF3, 0xCF, 0x00, 0x10, 0x00, 0x00,
    0x10, 0x18, 0x3C, 0xF3, 0xCF, 0x00, 0x61, 0x28, 0x38, 0x03, 0xC0, 0x61, 0xC0, 0x08, 0xFF, 0xFF,
    0x61, 0xC1, 0x08, 0xE6, 0x70, 0x61, 0x43, 0x00, 0x00, 0x01, 0x61, 0x40, 0x00, 0x00, 0x07, 0x61,
    0x41, 0x00, 0x04, 0xAD, 0x61, 0xF3, 0x64, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00,
    0x00, 0x01, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x40, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

const u32 g_dTree_Oba_kage_32DL_SIZE = sizeof(g_dTree_Oba_kage_32DL);
const u32 g_dTree_shadowMatDL_SIZE = sizeof(g_dTree_shadowMatDL);

dPa_smokeEcallBack dTree_data_c::mSmokeEcallback(1, 1, 0, 1);

/* 800787BC-80078960       .text WorkCo__12dTree_data_cFP10fopAc_ac_cUli */
void dTree_data_c::WorkCo(fopAc_ac_c*, u32, int) {
    /* Nonmatching */
}

/* 80078960-80078CC0       .text WorkAt_NoCutAnim__12dTree_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInfP8cCcD_Obj */
void dTree_data_c::WorkAt_NoCutAnim(fopAc_ac_c*, u32, int, dCcMassS_HitInf*, cCcD_Obj*) {
    /* Nonmatching */
}

/* 80078CC0-80078ED4       .text WorkAt__12dTree_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInf */
void dTree_data_c::WorkAt(fopAc_ac_c*, u32, int, dCcMassS_HitInf*) {
    /* Nonmatching */
}

/* 80078ED4-80078FA8       .text hitCheck__12dTree_data_cFP10fopAc_ac_ci */
void dTree_data_c::hitCheck(fopAc_ac_c*, int) {
    /* Nonmatching */
}

/* 80078FA8-8007945C       .text animation__12dTree_data_cFi */
void dTree_data_c::animation(int) {
    /* Nonmatching */
}

/* 8007945C-8007946C       .text newData__12dTree_room_cFP12dTree_data_c */
void dTree_room_c::newData(dTree_data_c*) {
    /* Nonmatching */
}

/* 8007946C-800794D0       .text deleteData__12dTree_room_cFv */
void dTree_room_c::deleteData() {
    /* Nonmatching */
}

/* 800794D0-800795E8       .text __ct__14dTree_packet_cFv */
dTree_packet_c::dTree_packet_c() {
    /* Nonmatching */
}

/* 800795E8-800795F4       .text __ct__12dTree_room_cFv */
dTree_room_c::dTree_room_c() {
    /* Nonmatching */
}

/* 800795F4-80079600       .text __ct__11dTree_anm_cFv */
dTree_anm_c::dTree_anm_c() {
    /* Nonmatching */
}

/* 80079600-8007960C       .text __ct__12dTree_data_cFv */
dTree_data_c::dTree_data_c() {
    /* Nonmatching */
}

/* 8007960C-80079898       .text draw__14dTree_packet_cFv */
void dTree_packet_c::draw() {
    /* Nonmatching */
    static GXVtxDescList l_shadowVtxDescList[] = {
        {GX_VA_POS, GX_INDEX8},
        {GX_VA_TEX0, GX_INDEX8},
        {GX_VA_NULL, GX_NONE},
    };
    static GXVtxAttrFmtList l_shadowVtxAttrFmtList[] = {
        {GX_VA_POS, GX_POS_XYZ, GX_S8, 0x00},
        {GX_VA_TEX0, GX_POS_XYZ, GX_S8, 0x00},
        {GX_VA_NULL, GX_POS_XYZ, GX_S8, 0x00},
    };
    static GXVtxDescList l_vtxDescList[] = {
        {GX_VA_POS, GX_INDEX8},
        {GX_VA_CLR0, GX_INDEX8},
        {GX_VA_TEX0, GX_INDEX8},
        {GX_VA_NULL, GX_NONE},
    };
    static GXVtxAttrFmtList l_vtxAttrFmtList[] = {
        {GX_VA_POS, GX_POS_XYZ, GX_F32, 0x00},
        {GX_VA_CLR0, GX_POS_XYZ, GX_RGBA8, 0x00},
        {GX_VA_TEX0, GX_POS_XYZ, GX_F32, 0x00},
        {GX_VA_NULL, GX_POS_XYZ, GX_S8, 0x00},
    };
    static struct {
        void* list;
        u32 nbytes;
    } l_modelDataStatus[] = {
        {&l_Oba_swood_noneDL,   0x20},
        {&l_Oba_swood_a_hapaDL, 0x160},
        {&l_Oba_swood_a_mikiDL, 0xC0},
        {&l_Oba_swood_a_cuttDL, 0xA0},
        {&l_Oba_swood_a_cutuDL, 0x60},
    };
}

/* 80079898-80079B24       .text calc__14dTree_packet_cFv */
void dTree_packet_c::calc() {
    /* Nonmatching */
}

/* 80079B24-80079E6C       .text checkGroundY__FP12dTree_data_cR4cXyz */
void checkGroundY(dTree_data_c*, cXyz&) {
    /* Nonmatching */
}

/* 80079E6C-8007A14C       .text update__14dTree_packet_cFv */
void dTree_packet_c::update() {
    /* Nonmatching */
}

/* 8007A14C-8007A238       .text setData__14dTree_packet_cFP12dTree_data_ciR4cXyzUci */
void dTree_packet_c::setData(dTree_data_c*, int, cXyz&, u8, int) {
    /* Nonmatching */
}

/* 8007A238-8007A36C       .text newData__14dTree_packet_cFR4cXyzUci */
void dTree_packet_c::newData(cXyz&, u8, int) {
    /* Nonmatching */
}

/* 8007A36C-8007A3DC       .text newAnm__14dTree_packet_cFs */
void dTree_packet_c::newAnm(s16) {
    /* Nonmatching */
}

/* 8007A3DC-8007A428       .text setAnm__14dTree_packet_cFis */
void dTree_packet_c::setAnm(int, s16) {
    /* Nonmatching */
}
